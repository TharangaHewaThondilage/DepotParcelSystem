package View;

import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

public class addParcelDetails extends java.awt.Dialog {

   
    public addParcelDetails(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Add Parcel");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_addP = new javax.swing.JButton();
        txt_parID = new javax.swing.JTextField();
        txt_DayinDepot = new javax.swing.JTextField();
        txt_weight = new javax.swing.JTextField();
        txt_lenght = new javax.swing.JTextField();
        txt_width = new javax.swing.JTextField();
        txt_height = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Heght");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 50, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Lenght");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 50, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Weight");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 50, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Days In Depot");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 90, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("ParcelID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 80, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Width");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 50, 20));

        btn_addP.setText("Add");
        btn_addP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addPActionPerformed(evt);
            }
        });
        add(btn_addP, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, -1, -1));
        add(txt_parID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 150, -1));
        add(txt_DayinDepot, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 150, -1));
        add(txt_weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 150, -1));
        add(txt_lenght, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 150, -1));
        add(txt_width, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 150, -1));
        add(txt_height, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btn_addPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addPActionPerformed
          // Get values from text fields
    String parcelID = txt_parID.getText().trim();
    String weight = txt_weight.getText().trim();
    String height = txt_height.getText().trim();
    String daysInDepot = txt_DayinDepot.getText().trim();
    String width = txt_width.getText().trim();
    String length = txt_lenght.getText().trim();

    // Validate that all fields are filled
    if (parcelID.isEmpty() || weight.isEmpty() || height.isEmpty() || daysInDepot.isEmpty() || width.isEmpty() || length.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields are required.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validate that numeric fields contain only integers
    if (!isInteger(weight) || !isInteger(height) || !isInteger(daysInDepot) || !isInteger(width) || !isInteger(length)) {
        JOptionPane.showMessageDialog(this, "Weight, Height, Days in Depot, Width, and Length must be integers.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Prepare the CSV line
    String csvLine = String.format("%s,%s,%s,%s,%s,%s", parcelID, daysInDepot, weight,length , width, height);

    // Write to parcels.csv
    try (FileWriter writer = new FileWriter("resources/Parcels.csv", true)) {
        writer.append(csvLine).append("\n");
        JOptionPane.showMessageDialog(this, "Parcel details saved successfully.");
        
         logActivity("Added parcel: " + parcelID + " at " + java.time.LocalDateTime.now());
        
        // Clear text fields after saving
        txt_parID.setText("");
        txt_weight.setText("");
        txt_height.setText("");
        txt_DayinDepot.setText("");
        txt_width.setText("");
        txt_lenght.setText("");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving to file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_addPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addParcelDetails dialog = new addParcelDetails(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txt_DayinDepot;
    private javax.swing.JTextField txt_height;
    private javax.swing.JTextField txt_lenght;
    private javax.swing.JTextField txt_parID;
    private javax.swing.JTextField txt_weight;
    private javax.swing.JTextField txt_width;
    // End of variables declaration//GEN-END:variables
 
    private boolean isInteger(String str) {
    try {
        Integer.parseInt(str);
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}
    
    private void logActivity(String message) {
    try (FileWriter logWriter = new FileWriter("resources/logfile.txt", true)) {
        logWriter.append(message).append("\n");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error writing to log file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}


}
